<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- target bean -->
	<bean id="target" class="ex2.MyBeanImple"/>
	
	<!-- Advice bean -->
	<bean id="loggerBeforeAdvice" class="ex2.MyBeanBeforeAdvice"/>
	<bean id="loggerAfterAdvice" class="ex2.MyAfterAdvice"/>
	
	<!-- pointCut Bean -->
	<!-- execution(리턴타입 패키지 경로 클래스명 메서드명, 매개변수) *kr.or.kosta.mvc..*Imple.*(..)
		()-> 인자가 하나도 없는 메서드만 지칭(..) -> 인자가 없거나 하나이사인 메서드 => 모든 메서드 
	 -->
	<bean id="loggerPointCut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
		<property name="expression" value="execution(* myGet*(..))"/>
	</bean>
	
	<!-- Advisor -->
	<bean id="loggerAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="loggerBeforeAdvice"/>
		<property name="pointcut" ref="loggerPointCut"/>
	</bean>
	
	<bean id="loggerAfterAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
	<property name="advice" ref="loggerAfterAdvice"/>
	<property name="pointcut" ref="loggerPointCut"/>
	</bean>
	<!-- ProxyFactoryBean -->
	<bean id="pfBean" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="target"/>
		<property name="interceptorNames" >
			<list>
				<value>loggerAdvisor</value>
				<value>loggerAfterAdvisor</value>
			</list>
		</property>
	</bean>
</beans>
